<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAhIAAw1FAAcddQAIJYsADUCMAAgncAADDTgAAAEKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAQcXAAgngwESU+AAFF37ABJS/wAUXv8BHXD/ABNa/wAWePcAEU/TAAgoegAB
        BxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEHGD8AHI3dARx5/wQbU/8AEzr/ABAw/wASOf8DH1L/AA8w/wAV
        Rv8AE0j/ABNb/wAQT+kACix/AAABDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUYVwAXYPQAGVn/ABAx/wooVv8AEDb/AA4w/wMX
        Rv8CIl7/ABM//wARN/8AFD//ABQ9/wAWTf8AFF7/ABJR5AAGGWEAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        Vf8IJFr/ByNY/yxPbv8FHUv/CCNV/wokT/8EECxuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABA0bXwwpXP8JJVv/CCRb/y5TdP8HIlf/CCNV/wokUf8EDiVuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABA0dXw0tYv8JKGH/Cixr/zNaff8HJFv/CCRX/wsnV/8EETBuAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABg8dWhExaP8LKmD/DC9q/zFafP8IJ2L/CCNV/wwp
        Wv8EECpuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChUlWhE0av8JKGP/CCZf/zti
        hv8HJ2X/Cipl/wsmVv8FEzFuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhEhVxg/
        ef8NLWT/Cida/zRbff8IKGX/CSZd/wwpXf8FFjhuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAChYkVBhFgf8KK2X/CShk/zRbfv8HKGr/ByRc/wkmW/8EFTZvAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABQ0ZTxpAeP8MLWj/Dzd6/0Nsj/8GJWL/ByRd/wgkVP8DEjF0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAsWTBc7bv8KJ1v/DTBt/zZdf/8IKmf/CCdk/wgi
        Uv8EF0F6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAoVSBEsWv8LKFr/DjBv/zdd
        f/8GJWX/BCNh/wUhVP8DFkSHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQsWQxIw
        YP8LJ1j/DCpi/ypKZf8FIV7/ASBf/wYsa/8CGlKYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABAoSPRY3Z/8MKFn/DSth/y1Rb/8IH1X/ABxY/wElZ/8AFEqoAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAwYNNxIxYv8KJFP/Cyhd/zBUdf8KI1r/AB9j/wImZf8AF1G9AAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AgoAAw8mAAQQPQAEFEEAAwwvAAEDEAAAAAEAAAAAAwcOMhEsWv8LJlX/CSRV/yxPb/8TMWb/AB9j/wEf
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//4B///8AAP/+AB///wAA//wAB///
        AAD/+AAB//8AAP/wAAD//wAA/+AAAH//AAD/wAAAH/8AAP/AAAAP/wAA/4AAAA//AAD/gAAAD/8AAP+A
        AAAP/wAA/8ADAA//AAD/4AcAH/8AAP/4BwAf/wAA//wDAD//AAD//gGAP/8AAP//AYA//wAA//8AgD//
        AAD//8CAP/8AAP///4A//wAA////gD//AAD///+AP/8AAP///4A//wAA////gD//AAD///+AP/8AAP//
        /4A//wAA////gD//AAD///+AP/8AAP///4A//wAA////gD//AAD///+AP/8AAP///4A//wAA////gD//
        AAD///+AH/8AAP//gIAf/wAA//4AAB//AAD/+AAAH/8AAP/4AAAf/wAA//gAAA//AAD/+AAAD/8AAP/8
        AAAP/wAA//wAAAf/AAD//gAAA/8AAP/+AAAD/wAA//8AAAH/AAD//wAAAf8AAP//A/AH/wAA//+P////
        AAA=
</value>
  </data>
</root>